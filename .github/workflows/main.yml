name: App testing CI

on:
  push:
    branches: [ "UI-testing" ]
  pull_request:
    branches: [ "UI-testing" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        python-version: ['3.x' ]

    steps:
      - uses: actions/checkout@v3

      # set up node
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './electron/ui/package-lock.json'

      # install electron
      - name: install electron
        working-directory: ./electron
        run: npm ci

      # install frontend and test
      - name: npm install & test
        working-directory: ./electron/ui
        run: |
          npm ci
          npm test

      # set up python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'
          cache-dependency-path: './backend/requirements.txt'  

      # install backend
      - name: install backend
        working-directory: backend
        run: pip install -r requirements.txt

      # clone & install watertap
      - name: clone & install watertap
        run: |
          git clone https://github.com/watertap-org/watertap.git
          cd watertap
          git checkout workshop_tutorial
          pip install .

      # get idaes extensions
      - name: get idaes extensions
        working-directory: backend/app
        run: idaes get-extensions

      # run backend server
      - name: run backend server
        working-directory: backend/app
        run: uvicorn main:app --reload --host 0.0.0.0 &

      # run frontend server
      - name: run frontend
        working-directory: electron/ui
        run: npm start &

      # set up artifact to upload screenshots for failed tests
      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        with:
            name: screenshots
            path: electron/cypress/screenshots/

      # set up artifact to upload videos
      - name: Upload videos
        uses: actions/upload-artifact@v3
        with:
            name: videoes
            path: electron/cypress/videos/

      # run cypress tests
      - name: Cypress e2e tests
        working-directory: electron
        run: npx cypress run
